{"ast":null,"code":"var _jsxFileName = \"/Users/ayato/task-management-app/frontend/src/components/AddTaskForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  onCreateTask\n}) => {\n  _s();\n  const [taskTitle, setTaskTitle] = React.useState(\"\");\n\n  // タスク入力フォームが変更された時の処理\n  const handleInputChange = e => {\n    e.preventDefault();\n    setTaskTitle(e.target.value);\n  };\n\n  // タスク追加ボタンが押された時の処理\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // 空のタスクは追加しない（バリデーションの追加）\n    if (taskTitle.trim() === \"\") {\n      return;\n    }\n    // onCreateTaskを呼び出してタスクを追加 (成功したらフォームをクリアする)\n    const success = await onCreateTask(taskTitle);\n    if (success) {\n      setTaskTitle(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskTitle,\n        placeholder: \"\\u8FFD\\u52A0\\u3059\\u308B\\u30BF\\u30B9\\u30AF\\u3092\\u5165\\u529B\\u3057\\u3066\\u304F\\u3060\\u3055\\u3044\",\n        onChange: e => handleInputChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\u8FFD\\u52A0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(AddTaskForm, \"jGWzcHSPOm7NrHLbMWThKd1Gfjo=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","AddTaskForm","onCreateTask","_s","taskTitle","setTaskTitle","useState","handleInputChange","e","preventDefault","target","value","handleSubmit","trim","success","children","onSubmit","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayato/task-management-app/frontend/src/components/AddTaskForm.tsx"],"sourcesContent":["import React from 'react';\n\ninterface AddTaskFormProps {\n    onCreateTask: (title: string) => Promise<boolean> ;\n}\n\nconst AddTaskForm: React.FC<AddTaskFormProps> = ({onCreateTask}: AddTaskFormProps) => {\n\n    const [taskTitle, setTaskTitle] = React.useState<string>(\"\");\n\n    // タスク入力フォームが変更された時の処理\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.preventDefault();\n        setTaskTitle(e.target.value);\n    }\n\n    // タスク追加ボタンが押された時の処理\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n        e.preventDefault();\n        // 空のタスクは追加しない（バリデーションの追加）\n        if (taskTitle.trim() === \"\") {\n            return;\n        }\n        // onCreateTaskを呼び出してタスクを追加 (成功したらフォームをクリアする)\n        const success: boolean = await onCreateTask(taskTitle);\n        if (success) {\n            setTaskTitle(\"\");\n        }\n        \n    }\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit} className='task-form'>\n                <input\n                type=\"text\"\n                value={taskTitle}\n                placeholder=\"追加するタスクを入力してください\"\n                onChange={(e) => handleInputChange(e)}\n                />\n                <button type=\"submit\">追加</button>\n            </form>\n            \n        </div>\n    )\n}\n\nexport default AddTaskForm"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1B,MAAMC,WAAuC,GAAGA,CAAC;EAACC;AAA8B,CAAC,KAAK;EAAAC,EAAA;EAElF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,KAAK,CAACQ,QAAQ,CAAS,EAAE,CAAC;;EAE5D;EACA,MAAMC,iBAAiB,GAAIC,CAAsC,IAAK;IAClEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBJ,YAAY,CAACG,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOJ,CAAmC,IAAK;IAChEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIL,SAAS,CAACS,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB;IACJ;IACA;IACA,MAAMC,OAAgB,GAAG,MAAMZ,YAAY,CAACE,SAAS,CAAC;IACtD,IAAIU,OAAO,EAAE;MACTT,YAAY,CAAC,EAAE,CAAC;IACpB;EAEJ,CAAC;EAED,oBACIL,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAMgB,QAAQ,EAAEJ,YAAa;MAACK,SAAS,EAAC,WAAW;MAAAF,QAAA,gBAC/Cf,OAAA;QACAkB,IAAI,EAAC,MAAM;QACXP,KAAK,EAAEP,SAAU;QACjBe,WAAW,EAAC,kGAAkB;QAC9BC,QAAQ,EAAGZ,CAAC,IAAKD,iBAAiB,CAACC,CAAC;MAAE;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFxB,OAAA;QAAQkB,IAAI,EAAC,QAAQ;QAAAH,QAAA,EAAC;MAAE;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEN,CAAC;AAEd,CAAC;AAAArB,EAAA,CAvCKF,WAAuC;AAAAwB,EAAA,GAAvCxB,WAAuC;AAyC7C,eAAeA,WAAW;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}